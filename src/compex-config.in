#!/bin/sh

# compex-config
# -------------
# Script to output command line arguments to be passed to g++. This forms a
# layer of abstraction hiding details such as where compex_gcc.so is located
# and the obtuse argument passing syntax.

usage() {
  echo Usage: $SELF [options] >&2
  echo >&2
  echo Options: >&2
  echo "    --gcc            Output command line arguments for g++" >&2
  echo "    --clang          Output command line arguments for clang++" >&2
  echo "    -o <filename>    Output filename for generated info" >&2
  exit 1
}

SELF="$0"
MODE=
PLUGIN_DIR="@LIBPATH@"
GCC_PLUGIN_PATH="$PLUGIN_DIR/compex_gcc.so"
CLANG_PLUGIN_PATH="$PLUGIN_DIR/compex_clang.so"
GCC_OUTPUT_ARG=
CLANG_OUTPUT_ARG=

while (( "$#" )); do
  case "$1" in
    '--gcc')    MODE=gcc   ;;
    '--clang')  MODE=clang ;;
    '-o')       [ -z "$2" ] && usage;
      GCC_OUTPUT_ARG="-fplugin-arg-compex_gcc-o=$2"
      CLANG_OUTPUT_ARG="-Xclang -plugin-arg-compex_clang -Xclang -o=$2"
      shift ;;
    *) usage ;;
  esac
  shift
done

[ -z "$MODE" ] && usage

if [ "$MODE" == "gcc" ]; then
  echo -fplugin="$GCC_PLUGIN_PATH" -D__COMPEX__=1 $OUTPUT_ARG
fi

if [ "$MODE" == "clang" ]; then
  echo -Xclang -D__COMPEX__=1 -load -Xclang $CLANG_PLUGIN_PATH -Xclang -plugin -Xclang compex_clang \
    $CLANG_OUTPUT_ARG
fi

# Â© 2014 Hugo Landau <hlandau@devever.net>         Licence: LGPLv3 or later
